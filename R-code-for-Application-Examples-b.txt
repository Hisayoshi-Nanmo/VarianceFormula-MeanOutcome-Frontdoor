

library(ggplot2)
options(scipen=100)


# Reading dataset (Okuno et al.,1986) #

 Dataset<-read.csv("Insert your directry path in this line for dataset.csv")


# Setting datamatrix and vectors#

 D<-data.frame(cbind(Dataset$X_4,Dataset$X_5,Dataset$X_6,Dataset$Y))
 names(D)<-c("X_4","X_5","X_6","Y")

 z<-as.vector(D$X_4)    # Covariate vector which satisfy backdoor criterion w.r.t (x,y) #
 x<-as.vector(D$X_5)    # Treatment variable vector #  
 s<-as.vector(D$X_6)    # Intermediate variable vector which satisfy frontdoor criterion w.r.t (x,y) #
 y<-as.vector(D$Y)      # Outcome vector #
 n<-length(y)           # Samplesize #
 p<-1                   # Number of variables which satisfy backdoor criterion w.r.t (x,y) #
 q<-1                   # Number of variables which satisfy frontdoor criterion w.r.t (x,y) # 


#Significance level#

 sig.alpha<-0.05 


# Estimation #

 hat_beta_ys.sz<-as.numeric(lm(y~s+z)$coef[2])
 hat_beta_yz.sz<-as.numeric(lm(y~s+z)$coef[3])
 hat_beta_yx.xs<-as.numeric(lm(y~x+s)$coef[2])
 hat_beta_ys.xs<-as.numeric(lm(y~x+s)$coef[3])
 hat_beta_sx<-as.numeric(lm(s~x)$coef[2])
 hat_beta_xz<-as.numeric(lm(x~z)$coef[2])
 hat_beta_yx<-as.numeric(lm(y~x)$coef[2])

 A_frontdoor<-cbind(rep(0,4),c(hat_beta_ys.sz,0,0,0),c(0,hat_beta_sx,0,0),c(hat_beta_yz.sz,0,hat_beta_xz,0))
 error_variance_frontdoor<-(diag(4)-A_frontdoor)%*%var(cbind(y,s,x,z))%*%t(diag(4)-A_frontdoor)

 hat_sigma_yy<-var(y)
 hat_sigma_xx<-var(x)
 hat_sigma_xy<-cov(x,y)
 hat_sigma_yy.xs<-error_variance_frontdoor[1,1]
 hat_sigma_xx.z<-error_variance_frontdoor[3,3]
 hat_sigma_ss.x<-error_variance_frontdoor[2,2]
 hat_sigma_yy.x<-hat_sigma_yy+(hat_beta_yx^2)*hat_sigma_xx-2*hat_beta_yx*hat_sigma_xy
 hat_mu_x<-mean(x)
 hat_mu_z<-mean(z)
 hat_mu_y<-mean(y)

 hat_beta_yx.xz<-as.numeric(lm(y~x+z)$coef[2])
 hat_beta_yz.xz<-as.numeric(lm(y~x+z)$coef[3])

 A_backdoor<-cbind(rep(0,3),c(hat_beta_yx.xz,0,0),c(hat_beta_yz.xz,hat_beta_xz,0))
 error_variance_backdoor<-(diag(3)-A_backdoor)%*%var(cbind(y,x,z))%*%t(diag(3)-A_backdoor)

 hat_sigma_yy.xz<-error_variance_backdoor[1,1]
 hat_sigma_zz<-var(z)


# Confidence intervals functions and scatterplots #

 z_alpha<-qnorm(1-(sig.alpha/2))

 meanresponse_univariate<-function(x){hat_mu_y+hat_beta_yx*(x-hat_mu_x)}
 meanresponse_backdoor<-function(x){hat_mu_y+hat_beta_yx.xz*(x-hat_mu_x)}
 meanresponse_frontdoor<-function(x){hat_mu_y+hat_beta_ys.xs*hat_beta_sx*(x-hat_mu_x)}
 var_univariate<-function(x){(1/n)*hat_sigma_yy.x+(hat_sigma_yy.x/((n-3)*hat_sigma_xx))*((x-hat_mu_x)^2+hat_sigma_xx/n)}
 var_backdoor<-function(x){(1/n)*(hat_sigma_yy.xz+hat_beta_yz.xz*hat_sigma_zz*hat_beta_yz.xz)+(hat_sigma_yy.xz/((n-p-3)*hat_sigma_xx.z))*((x-hat_mu_x)^2+hat_sigma_xx/n)}
 var_frontdoor<-function(x){(1/n)*(hat_sigma_yy.x+(hat_beta_yx.xs^2)*hat_sigma_xx)+((x-hat_mu_x)^2+hat_sigma_xx/n)*(hat_sigma_yy.xs/((n-q-3)*hat_sigma_xx.z)-hat_sigma_yy.xs/((n-3)*hat_sigma_xx)+hat_beta_ys.xs*hat_sigma_ss.x*hat_beta_ys.xs/((n-3)*hat_sigma_xx))}

 plot_interval<-ggplot(data=data.frame(X=c(1.5,6),Y=c(8,55)), aes(x=X,y=Y))
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_univariate(x)+z_alpha*sqrt(var_univariate(x)),lwd=1,lty="dotdash",col="gray45")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_univariate(x)-z_alpha*sqrt(var_univariate(x)),lwd=1,lty="dotdash",col="gray45")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_univariate(x),lwd=1,lty="dotdash",col="gray45")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_backdoor(x)+z_alpha*sqrt(var_backdoor(x)),lwd=1,col="gray60")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_backdoor(x)-z_alpha*sqrt(var_backdoor(x)),lwd=1,col="gray60")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_backdoor(x),lwd=1,col="gray60")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_frontdoor(x)+z_alpha*sqrt(var_frontdoor(x)),lwd=1,col="gray35")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_frontdoor(x)-z_alpha*sqrt(var_frontdoor(x)),lwd=1,col="gray35")
 plot_interval<-plot_interval+stat_function(fun=function(x)meanresponse_frontdoor(x),lwd=1,col="gray35")
 plot_interval<-plot_interval+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank())
 plot_interval

 plot_scatter<-plot_interval+geom_point(data=D, aes(x=X_5,y=Y),col="gray40")+xlim(1.5,6)+ylim(8,55)
 plot_scatter


